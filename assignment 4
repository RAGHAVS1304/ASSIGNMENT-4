#ANSWER 1
def reverse(s):
    str = ""
    for i in s:
        str = i + str
    return str
  
s = "Geeksforgeeks"
  
print("The original string is : ", end="")
print(s)
  
print("The reversed string(using loops) is : ", end="")
print(reverse(s))


#ANSWER 2
lower=int(input("Enter lower range limit:"))
upper=int(input("Enter upper range limit:"))
n=int(input("Enter the number to be divided by:"))
for i in range(lower,upper+1):
    if(i%n==0):
        print(i)
       
       
#ANSWER 3
# Three sides of the triangle is a, b and c:  
a = float(input('Enter first side: '))  
b = float(input('Enter second side: '))  
c = float(input('Enter third side: '))  
  
# calculate the semi-perimeter  
s = (a + b + c) / 2  
  
# calculate the area  
area = (s*(s-a)*(s-b)*(s-c)) ** 0.5  
print('The area of the triangle is ' ,area) 


#ANSWER 4
n=5;
for i in range(n):
    for j in range(i):
        print ('* ', end="")
    print('')

for i in range(n,0,-1):
    for j in range(i):
        print('* ', end="")
    print('')
    
    
#ANSWER 5
rows = int(input("Enter Right Triangle Consecutive Alphabets Rows = "))

print("====The Right Triangle of Consecutive Alphabets Pattern====")
alphabet = 65
i = 0

while(i < rows):
    j = 0
    while(j <= i):
        print('%c' %alphabet, end = ' ')
        alphabet = alphabet + 1
        j = j + 1
    print()
    i = i + 1
    
#ANSWER 6
# First, we will take the input:  
lower_value = int(input ("Please, Enter the Lowest Range Value: "))  
upper_value = int(input ("Please, Enter the Upper Range Value: "))  
  
print ("The Prime Numbers in the range are: ")  
for number in range (lower_value, upper_value + 1):  
    if number > 1:  
        for i in range (2, number):  
            if (number % i) == 0:  
                break  
        else:  
            print (number)  
            
 #ANSWER 7
 
for i in range (1,501):
    if(i%7==0 and i%11==0):
        print(i)
        
#ANSWER 8
















#ANSWER 9
def word_count(str):
    counts = dict()
    words = str.split()

    for word in words:
        if word in counts:
            counts[word] += 1
        else:
            counts[word] = 1

    return counts

print( word_count('the quick brown fox jumps over the lazy dog.'))
 
            
            
        
        
